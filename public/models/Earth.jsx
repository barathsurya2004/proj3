/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 Earth.gltf 
*/

import React, { useContext, useEffect, useRef, useState } from "react";
import { shaderMaterial, useGLTF } from "@react-three/drei";
import { extend, useFrame } from "@react-three/fiber";
import { Context } from "../../src/context";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import glsl from "glslify";
import * as THREE from "three";
const AlphaShaderMaterial = shaderMaterial(
  {
    uColor: new THREE.Color(0, 0.2, 0.4),
    uTime: 0,
    ballPosition: new THREE.Vector3(),
  },
  // Vertex Shader
  glsl`
  varying vec3 vPos;
  varying vec2 vUv;
  varying vec3 vNormal;
  void main() {
    vPos = position;
    vUv = uv;
    vNormal = normal;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
  }
  `,
  // Fragment Shader
  glsl`
  uniform vec3 ballPosition;
  varying vec3 vPos;
  varying vec2 vUv;
  varying vec3 vNormal;
  void main() {
    vec3 viewDir = normalize(cameraPosition - vPos);
    float fres = dot(viewDir, vNormal);
    float dist = distance(ballPosition, vPos);
    float alpha = smoothstep(0.0, 0.5, dist);
    gl_FragColor = vec4(0.0, 0.0, 0.0, alpha * fres);
  }
  `
);
extend({ AlphaShaderMaterial });

// Create the shader material with transparent property set to true
export const Ball = () => {
  return (
    <mesh
      position={[0, 0, 0]}
      scale={0.3}
      onPointerEnter={(e) => {
        e.stopPropagation();
      }}
    >
      <sphereGeometry args={[1, 32, 32]} />
      <alphaShaderMaterial uColor={"hotpink"} transparent castShadows blend />
    </mesh>
  );
};

export function Earth(props) {
  const group = useRef();
  const hoverRef = useRef();
  const [hovering, setHovering] = useState(true);
  const [rotating, setRotating] = useState(true);
  const [canStop, setCanStop] = useState(true);
  const {
    meshSelected,
    setMeshSelected,
    canSelect,
    setCanSelect,
    setDown,
    globeClicked,
    setGlobeClicked,
    pointer,
  } = useContext(Context);
  const [initialMouse, setInitialMouse] = useState({ x: 0, y: 0 });
  const [dragging, setDragging] = useState(false);
  // const config = useControls({
  //   scale: {
  //     value: 1,
  //     max: 10,
  //     min: 0,
  //     step: 0.01,
  //   },
  //   x: {
  //     value: 0.4,
  //     max: 1,
  //     min: -1,
  //     step: 0.001,
  //   },
  //   y: {
  //     value: 0,
  //     max: 1,
  //     min: -1,
  //     step: 0.001,
  //   },
  //   z: {
  //     value: 0,
  //     max: 1,
  //     min: -1,
  //     step: 0.001,
  //   },
  //   rotY: {
  //     value: 0,
  //     max: Math.PI,
  //     min: -Math.PI,
  //     step: 0.001,
  //   },
  //   rotX: {
  //     value: 0,
  //     max: Math.PI,
  //     min: -Math.PI,
  //     step: 0.001,
  //   },
  //   rotZ: {
  //     value: 0,
  //     max: Math.PI,
  //     min: -Math.PI,
  //     step: 0.001,
  //   },
  // });

  useGSAP(() => {
    gsap.fromTo(
      hoverRef.current.scale,
      {
        x: 0,
        y: 0,
        z: 0,
      },
      {
        x: 1,
        y: 1,
        z: 1,
        duration: 0.001,
        scrollTrigger: {
          trigger: ".food-is-culture",
          start: "top bottom",
          toggleActions: "play none none reverse",
        },
      }
    );
    gsap.fromTo(
      hoverRef.current.position,
      {
        x: 0.4,
      },
      {
        x: -0.4,
        scrollTrigger: {
          trigger: ".cuisines-of-the-world",
          onEnter: () => {
            setCanSelect(true);
          },
          onLeaveBack: () => {
            setCanSelect(false);
          },
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.scale,
      {
        x: 1,
        y: 1,
        z: 1,
      },
      {
        x: 1.3,
        y: 1.3,
        z: 1.3,
        scrollTrigger: {
          onEnter: () => {
            setHovering(false);
            gsap.to(hoverRef.current.rotation, {
              y: 0,
              x: 0,
            });
          },
          onLeaveBack: () => {
            setHovering(true);
          },
          trigger: ".cuisines-of-the-world",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.position,
      {
        x: -0.4,
        y: 0,
      },
      {
        x: 0.1,
        y: 0.06,
        scrollTrigger: {
          onEnter: () => {
            setCanStop(false);
            setDown(true);
          },
          onLeaveBack: () => {
            setCanStop(true);
            setDown(false);
          },
          trigger: ".cuisines-of-india",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.scale,
      {
        x: 1.3,
        y: 1.3,
        z: 1.3,
      },
      {
        x: 3.02,
        y: 3.02,
        z: 3.02,
        scrollTrigger: {
          trigger: ".cuisines-of-india",
          onEnter: () => {
            setRotating(false);
            gsap.to(group.current.rotation, {
              y: 0,
              duration: 1,
            });
          },
          onLeaveBack: () => {
            setRotating(true);
          },
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.rotation,
      {
        y: 0,
        x: 0,
      },
      {
        y: -0.33,
        x: 0,
        scrollTrigger: {
          trigger: ".cuisines-of-india",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.scale,
      {
        x: 3.02,
        y: 3.02,
        z: 3.02,
      },
      {
        x: 5.56,
        y: 5.56,
        z: 5.56,
        scrollTrigger: {
          trigger: ".cuisines-of-tn",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.position,
      {
        x: 0.1,
        y: 0.06,
      },
      {
        x: 0.16,
        y: 0.09,
        scrollTrigger: {
          trigger: ".cuisines-of-tn",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
    gsap.fromTo(
      hoverRef.current.rotation,
      {
        y: -0.33,
        x: 0,
      },
      {
        y: -0.47,
        x: -0.24,
        scrollTrigger: {
          trigger: ".cuisines-of-tn",
          start: "top bottom",
          end: "top top",
          scrub: true,
        },
        immediateRender: false,
      }
    );
  });
  useEffect(() => {
    if (!globeClicked) {
      gsap.to(group.current.rotation, {
        y: 0,
        x: 0,
        ease: "elastic.out(1, 0.3)",
        duration: 1,
      });
    }
  }, [dragging]);
  useFrame((state, delta) => {
    // console.log(state);
    if (rotating) {
      group.current.rotation.y =
        (group.current.rotation.y + 0.005) % (2 * Math.PI);
    }

    if (hovering) {
      gsap.to(hoverRef.current.rotation, {
        x: -state.pointer.y / 5,
        y: state.pointer.x / 5,
        duration: 0.5,
      });
    }
    if (globeClicked) {
      const [x, y] = pointer;
      const dx = x - initialMouse.x;
      const dy = y - initialMouse.y;
      const maxRotX = 45 * (Math.PI / 180); // 90 degrees in radians
      const minRotX = -45 * (Math.PI / 180); // -90 degrees in radians

      const rotX = group.current.rotation.x;
      const rotY = group.current.rotation.y;

      // Calculate new rotation values
      let newRotX = (rotX + dy / 150) % (2 * Math.PI);

      // Constrain newRotX between minRotX and maxRotX
      newRotX = Math.max(minRotX, Math.min(maxRotX, newRotX));
      let newRotY = rotY + dx / 150;
      // Apply the constrained rotation to x and the updated rotation to y
      gsap.to(group.current.rotation, {
        x: newRotX,
        y: newRotY,
        duration: 0.5,
      });
      setInitialMouse({ x: x, y: y });
    }
  });
  const { nodes, materials } = useGLTF("/models/Earth.gltf");
  return (
    <group {...props} dispose={null} ref={hoverRef} position={[0.4, 0, 0]}>
      <mesh
        scale={0.35}
        onPointerEnter={() => {
          if (canSelect) {
            setMeshSelected(null);
            setRotating(false);
          }
        }}
        onPointerLeave={() => {
          if (canStop) {
            setRotating(true);
            setGlobeClicked(false);
            setDragging(false);
          }
        }}
        onPointerDown={(e) => {
          const [x, y] = pointer;
          console.log(pointer);
          setInitialMouse({ x: x, y: y });
          setGlobeClicked(true);
          setDragging(true);
        }}
        onPointerUp={() => {
          setGlobeClicked(false);
        }}
      >
        <sphereGeometry args={[1, 32, 32]} />
        <meshStandardMaterial transparent opacity={0.2} color={"#000"} />
      </mesh>
      <Ball />
      <group ref={group}>
        <mesh
          geometry={nodes.frame.geometry}
          material={materials["instances grid.001"]}
          scale={0.305}
        >
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("American");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes
                  .americanPamericanlamericanaamericannamericaneamericanamerican3
                  .geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes
                  .americanPamericanlamericanaamericannamericaneamericanamerican3_1
                  .geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Australian");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.australia_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.australia_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Bangala");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.bangala_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.bangala_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("British");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.british_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.british_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Central Africa");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["central-africa"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["central-africa_1"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Central Asia");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["central-asia_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["central-asia_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Central Euro");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["central-euro_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["central-euro_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chetti Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chetti-naduPchetti-nadulchetti-naduachetti-nadunchetti-nadu"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chetti-naduPchetti-nadulchetti-naduachetti-nadunchetti-nadu_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chinese");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.chinese_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.chinese_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol004"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol004_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol005"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol005_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol006"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechol006_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Circumpolar");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.circumpolar_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.circumpolar_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East Africa");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["east-africa"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["east-africa_1"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East Euro");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["east-euro_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["east-euro_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("France");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.france_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.france_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Greek");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.greek_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.greek_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Iranian");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.iranian_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.iranian_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Irish");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.irish_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.irish_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Italian");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.italian_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.italian_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Japanese");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.japanese_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.japanese_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong007"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong007_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong005"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong005_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong004"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong004_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong006"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong006_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekong003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Korean");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.korean_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.korean_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Mexican");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.mexican_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.mexican_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Middle East");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["middle-east_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["middle-east_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Najil Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Najil Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Najil Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenaji_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.406, 3.406, 3.406]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Nepal");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.nepal_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.nepal_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North African");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["north-african_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["north-african_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea004"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea004_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-ea002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india004"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india004_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india006"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india006_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india005"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india005_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india007"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india007_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-india003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Pakistan");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.pakistan_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.pakistan_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Pandiya Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Pandiya Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Pandiya Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Papua");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.papua_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.papua_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Nanjil Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenajil-na"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "najil-naduPnajil-nadulnajil-naduanajil-nadunnajil-naduenajil-na_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chola Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechola-na"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chola-naduPchola-nadulchola-naduachola-nadunchola-naduechola-na_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Kongu Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekongu-na"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "kongu-naduPkongu-nadulkongu-naduakongu-nadunkongu-naduekongu-na_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Chetti Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "chetti-naduPchetti-nadulchetti-naduachetti-nadunchetti-nadueche"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "chetti-naduPchetti-nadulchetti-naduachetti-nadunchetti-nadueche_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Pandiya Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya-nad"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "pandiya-naduPpandiya-nadulpandiya-naduapandiya-nadunpandiya-nad_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["north-east-india001"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["north-east-india001_1"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["north-east-india_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["north-east-india_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-indiaenor"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-indiaPnorth-indialnorth-indiaanorth-indiannorth-indiaenor_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east-ind"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "east-indiaeeast-indiaaeast-indiaseast-indiateast-india-east-ind_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("North East India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-east-i"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "north-east-indiaPnorth-east-indialnorth-east-indiaanorth-east-i_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("East Africa");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["east-africa001"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["east-africa001_1"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
          >
            <mesh
              geometry={nodes.Plane350.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.Plane350_1.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Portugal");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.portugal_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.portugal_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Rajastan");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.rajastan_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.rajastan_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South American");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["south-american"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["south-american_1"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South African");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["south-african_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["south-african_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South East");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["south-east_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["south-east_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-indiaesou"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-indiaesou_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-indiasout"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-indiasout_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("South India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "south-indiaPsouth-indialsouth-indiaasouth-indiansouth-india002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Spanish");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.spanish_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.spanish_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Sri Lanka");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.srilanka_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.srilanka_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai-nad"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai-nad_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai004"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai004_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai001"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai001_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai005"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai005_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai002"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai002_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Thondai Nadu");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai003"
                ].geometry
              }
              material={materials["material.001"]}
            />
            <mesh
              geometry={
                nodes[
                  "thondai-naduPthondai-nadulthondai-naduathondai-nadunthondai003_1"
                ].geometry
              }
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("Turkish");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes.turkish_1.geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes.turkish_2.geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("West India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["west-india_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["west-india_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
          <group
            position={[-0.015, 0.051, 1.077]}
            rotation={[-Math.PI, 0, 0]}
            scale={[-3.412, 3.412, 3.412]}
            onPointerEnter={(e) => {
              e.stopPropagation();

              if (canSelect) {
                setMeshSelected("West India");
              }
            }}
            onPointerLeave={(e) => {
              e.stopPropagation();
              setMeshSelected(null);
            }}
          >
            <mesh
              geometry={nodes["west-india001_1"].geometry}
              material={materials["material.001"]}
            />
            <mesh
              geometry={nodes["west-india001_2"].geometry}
              material={materials.OutlineMaterial}
            />
          </group>
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/Earth.gltf");
