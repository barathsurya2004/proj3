/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 Tamarind.gltf 
*/

import React, { useRef } from "react";
import { shaderMaterial, useGLTF } from "@react-three/drei";
import { extend } from "@react-three/fiber";
import glsl from "glslify";
const ChettiNadShaderMaterial = shaderMaterial(
  {
    opacity: 1.0,
  },

  glsl`
      varying vec3 vPosition;

      void main() {
        vPosition = position;
        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
      } 
  `,
  glsl`
    varying vec3 vPosition;

    void main() {
      float opacity =smoothstep(-1.0,1.0,vPosition.z*28.528);
      gl_FragColor = vec4(0.445, 0.127, 0.127, opacity);
    } 
  `
);
extend({ ChettiNadShaderMaterial });
export function Tamarind(props) {
  const { nodes, materials } = useGLTF("/models/cards/Tamarind.gltf");
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Text.geometry}
        material={materials["Material.002"]}
        position={[0, -0.775, 0.094]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.302}
      />
      <mesh
        geometry={nodes.Text001.geometry}
        material={materials["Material.002"]}
        position={[0, -1.166, 0.086]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.369}
      />
      <mesh
        geometry={nodes.Text002.geometry}
        material={materials["Material.002"]}
        position={[0, -1.647, 0.107]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.182}
      />
      <mesh
        geometry={nodes.Raisin_242.geometry}
        material={materials["01___Default"]}
        position={[0, 0.616, 0]}
        rotation={[1.927, 0, 0]}
        scale={[0.054, 0.054, 0.035]}
      ></mesh>
      <mesh
        geometry={nodes.Curve.geometry}
        material={materials.chetti1}
        position={[-0.004, 0.003, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[28.527, 28.528, 28.528]}
      />
      <mesh
        geometry={nodes.Curve002.geometry}
        material={materials["Material.006"]}
        position={[0, -1.934, 0.108]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={29.821}
      />
      <mesh
        geometry={nodes.Curve007.geometry}
        position={[-0.004, 0.003, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[28.031, 28.528, 28.031]}
      >
        <chettiNadShaderMaterial transparent attach="material" />
      </mesh>
      <mesh
        geometry={nodes.Curve001.geometry}
        material={materials["Material.006"]}
        position={[0.66, -1.934, 0.125]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={34.117}
      />
      <mesh
        geometry={nodes.Curve003.geometry}
        material={materials["Material.006"]}
        position={[-0.33, -1.934, 0.108]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={29.821}
      />
      <mesh
        geometry={nodes.Curve004.geometry}
        material={materials["Material.006"]}
        position={[-0.66, -1.934, 0.108]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={29.821}
      />
      <mesh
        geometry={nodes.Curve006.geometry}
        material={materials["Material.006"]}
        position={[0.33, -1.934, 0.125]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={34.117}
      />
    </group>
  );
}

useGLTF.preload("/Tamarind.gltf");
