/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 heart.glb 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import gsap from "gsap";
import { useGSAP } from "@gsap/react";
gsap.registerPlugin(useGSAP);
export function HeartModel(props) {
  const group = useRef();
  useGSAP(() => {
    gsap.fromTo(
      group.current.scale,
      {
        x: 0,
        y: 0,
        z: 0,
      },
      {
        x: 0.4,
        y: 0.4,
        z: 0.4,
        duration: 0.001,
        scrollTrigger: {
          trigger: ".food-is-love",
          start: "top bottom",
          toggleActions: "play none none reverse",
        },
      }
    );
    gsap.fromTo(
      group.current.scale,
      {
        x: 0.4,
        y: 0.4,
        z: 0.4,
      },
      {
        x: 0,
        y: 0,
        z: 0,
        duration: 0.001,
        scrollTrigger: {
          trigger: ".food-is-art",
          start: "top bottom",
          toggleActions: "play none none reverse",
        },
        immediateRender: false,
      }
    );
  });
  const { nodes, materials } = useGLTF("/models/heart.glb");
  return (
    <group {...props} ref={group} dispose={null} scale={0} position={[3, 0, 0]}>
      <mesh
        geometry={nodes.polySurface1.geometry}
        material={materials.standardSurface2}
        position={[0, 0.016, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.trans.geometry}
        position={[0, 0.016, 0]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={1.284}
      >
        <meshStandardMaterial color="#FF0000" transparent opacity={0} />
      </mesh>
    </group>
  );
}

useGLTF.preload("/heart.glb");
