/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 q_mark.glb 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/all";
gsap.registerPlugin(ScrollTrigger);
export function QMark(props) {
  const qMarkScale = useRef();
  const qMarkPos = useRef();
  const lightRef = useRef();
  useGSAP(() => {
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".scroll-move-start",
        start: "top bottom",
        end: "top center",
        scrub: 0.5,
      },
    });
    tl.to(qMarkPos.current.position, {
      x: 0.9,
      y: 0.3,
      duration: 1,
    }).to(qMarkPos.current.position, {
      x: 3,
      y: -3,
      z: 0,
      duration: 4,
    });
    gsap.fromTo(
      qMarkScale.current.scale,
      {
        x: 0.025,
        y: 0.025,
        z: 0.025,
      },
      {
        x: 0.45,
        y: 0.45,
        z: 0.45,
        scrollTrigger: {
          trigger: ".scroll-move-start",
          start: "top bottom",
          end: "top center",
          scrub: 0.5,
        },
      }
    );
    gsap.fromTo(
      lightRef.current.position,
      {
        x: 0,
        y: 0,
        z: 3,
      },
      {
        x: 1 * 2,
        y: 2 * 2.8672,
        z: 2 * 1.58927,
        scrollTrigger: {
          trigger: ".scroll-move-start",
          start: "top bottom",
          end: "top top",
          scrub: 0.5,
        },
      }
    );
  });
  const { nodes, materials } = useGLTF("/models/q_mark.glb");
  return (
    <group {...props} ref={qMarkPos} dispose={null} position={[0.3, -1.13, 0]}>
      {/* <ambientLight intensity={0.5} /> */}
      <pointLight ref={lightRef} intensity={15} color={"#FFEDDE"} />
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.025} ref={qMarkScale}>
        <mesh
          geometry={nodes.svgMeshShape3.geometry}
          position={[-4.752, -0.788, -2]}
          scale={[1, 1.575, 1]}
        >
          <meshStandardMaterial color={"#F2D8A0"} roughness={0.85} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/q_mark.glb");
