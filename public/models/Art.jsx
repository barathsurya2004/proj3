/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 art.glb 
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";

export function ArtModel(props) {
  const group = useRef();
  useGSAP(() => {
    gsap.to(group.current.scale, {
      x: 0.6,
      y: 0.6,
      z: 0.6,
      duration: 0.001,
      scrollTrigger: {
        trigger: ".food-is-art",
        start: "top bottom",
        toggleActions: "play none none reverse",
      },
    });
    gsap.fromTo(
      group.current.scale,
      {
        x: 0.6,
        y: 0.6,
        z: 0.6,
      },
      {
        x: 0,
        y: 0,
        z: 0,
        duration: 0.001,
        scrollTrigger: {
          trigger: ".food-is-adventure",
          start: "top bottom",
          toggleActions: "play none none reverse",
        },
        immediateRender: false,
      }
    );
  });
  const { nodes, materials } = useGLTF("/models/art.glb");
  return (
    <group {...props} ref={group} dispose={null} scale={0} position={[3, 0, 0]}>
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder024.geometry}
        material={materials["_crayfishdiffuse.001"]}
        position={[-0.713, -2.822, -0.27]}
        rotation={[1.496, -0.324, -0.096]}
      />
      <mesh
        geometry={nodes.lowpoly_spoon.geometry}
        material={materials["Material.002"]}
        position={[-0.249, 0.191, -0.465]}
        rotation={[1.794, -1.268, -2.933]}
        scale={[2.946, 0.052, 0.743]}
      />
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder001.geometry}
        material={materials["Material.002"]}
        position={[-1.085, -3.946, -0.102]}
        rotation={[1.496, -0.324, -0.096]}
      />
      <mesh
        geometry={nodes.cutensils_asian_turner_Cylinder002.geometry}
        material={materials["Material.002"]}
        position={[1.18, 2.863, -0.974]}
        rotation={[1.496, -0.324, -0.096]}
      />
    </group>
  );
}

useGLTF.preload("/art.glb");
