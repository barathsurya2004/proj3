/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 apple.glb 
*/

import React, { forwardRef, useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useGSAP } from "@gsap/react";
import gsap from "gsap";
gsap.registerPlugin(useGSAP);
export const AppleAnim = (props) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/apple.glb");
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (actions) {
      // Play all animations
      Object.values(actions).forEach((action) => {
        action.play();
        console.log(action);
      });
    }
  }, [actions]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Empty001" position={[0, 1.218, 0]}>
          <group
            name="Empty"
            position={[0, -1.218, 0]}
            rotation={[-Math.PI, 0.657, -Math.PI]}
          >
            <group name="Apple" rotation={[Math.PI, -0.34, Math.PI]}>
              <mesh
                name="Cube020"
                geometry={nodes.Cube020.geometry}
                material={materials["DarkRed.001"]}
              />
              <mesh
                name="Cube020_1"
                geometry={nodes.Cube020_1.geometry}
                material={materials["DarkBrown.001"]}
              />
              <mesh
                name="Cube020_2"
                geometry={nodes.Cube020_2.geometry}
                material={materials["DarkGreen.001"]}
              />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload("/apple.glb");
